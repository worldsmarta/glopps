-> Receives data from its parent (LogisticsConsumer.jsx) via props.
**data** : array of table rows (from parentâ€™s(LogisticsConsumer.jsx) tableData state).
**selectedCheckboxes**: IDs of currently selected checkbox rows. (ID means Logistics Consumer Id)
**selectedRadio**: ID of currently selected radio row.(ID means Logistics Consumer Id)
**onCheckboxChange**: callback to update checkbox selections in the parent.
**onRadioChange**: callback to update the radio selection in the parent.
**onSort**: callback to trigger sorting in the parent.
**onUserClick**: callback when a user ID(row in resp. column) is clicked.
**setSortField**: for sorting the rows in a table based on a field.


-> Displays rows of table of Logistics Consumer

-> Tells the parent(LogisticsConsumer.jsx) when something changes (sorting, selecting, user clicks).

-> toggle between radio and checkbox(if radio is selected then checkbox is unselected vice versa)

-> if checkbox is unselected then Add Consumer gets disabled

-> on sorting a column(ascending or descending order) the rows with checkboxes and radio buttons are sorted seperately

->**functions**:
**handleCheckboxChange**: example
100 + VO(part id) and 1002(market consumer)
Initially: selectedCheckboxes = [] (Add Consumer button is disable)
You select the checkbox for row 1000000002.
selectedCheckboxes.includes("1000000002") is false
So it adds it:
updated = [...[], "1000000002"] = ["1000000002"]

Calls onCheckboxChange(["1000000002"])
In parent (LogisticsConsumer.jsx), setSelectedCheckboxes(["1000000002"]) and clears radio selection in handleCheckboxSelection function in LogisticsConsumer

If you click the same checkbox again(unselecting the checkbox which we had previously selected)
includes("1000000002"): true
Removes it: filter(item => item !== "1000000002") : [] (here selectedCheckboxes becomes empty so that the add consumer button is disable, if you see line 393 in LogisticsConsumer) 
here only one Logistic Consumer is selected in the example for multiple selected also the same will happen.


